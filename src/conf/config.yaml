# defaults
defaults:
  - model: bandsplitrnnV7
  - train_dataset: default
  - val_dataset: default
  - test_dataset: default
  - sad: default
  - augmentations: default
  - featurizer: stft
  - callbacks: default
  - logger: ['tensorboard','wandb'] # set logger here or use command line (e.g. python run.py logger=['tensorboard','wandb'])
  - _self_

# data
train_loader:
  batch_size: 4 # 2
  num_workers: 4
  shuffle: True
  drop_last: True
val_loader:
  batch_size: 4 # 2
  num_workers: 4
  shuffle: False
  drop_last: False

# optimization
opt:
  _target_: torch.optim.Adam
  lr: 1e-3
# sch:
#   _target_: torch.optim.lr_scheduler.StepLR
#   step_size: 2
#   gamma: 0.98

# torch.optim.lr_scheduler.LambdaLR
sch:
    warmup_step: 10
    alpha: 0.1
    gamma: 0.98

ckpt_path: null

# Remove when fully integrated
# logger:
#   _target_: pytorch_lightning.loggers.TensorBoardLogger
#   save_dir: "/tb_logs"
#   name: ""
#   version: ""
#   default_hp_metric: False

trainer:
  fast_dev_run: False
  max_epochs: 500
  check_val_every_n_epoch: 1
  num_sanity_val_steps: 5 # 5
  log_every_n_steps: 10 # 100
  accelerator: gpu # "auto", gpu
  devices: 1 # can increase devices with more gpus available
  gradient_clip_val: 5
  precision: 16 # 16 for lower memory load, 32 for better accuracy
  enable_progress_bar: True
  benchmark: True
  deterministic: False

# hydra
experiment_dirname: bandsplitrnn
hydra:
  run:
    dir: logs/${...experiment_dirname}/${now:%Y-%m-%d}_${now:%H-%M}
  job:
    chdir: False

# wandb
wandb_api_key: ${oc.env:WANDB_API_KEY}